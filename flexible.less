// basic
@flexible-unit: 75;
@flexible-dpr: 2;

// less hack function
@flexible-px2rem: `(function() {
	// change this function to the basic value
    function px2rem(x) {
      return x/75;
    }

    var less = process.mainModule.children.find(function (child) {
        return child.exports.lesscHelper;
    }).exports;

    less.functions.functionRegistry.add("px2rem", function(x, y) {
    	if (x.unit == 'em') {
			return new less.tree.Dimension(x.value, 'em')
    	} else {
			return new less.tree.Dimension(px2rem(x.value), 'rem');
    	}
    });
})()`;

// // less 3.0
// .px2rem(@value; @width: @flexible-unit): @return when(isem(@value) = true) {
// 	@return: @value;
// }

// .px2rem(@value; @width: @flexible-unit): @return when(isem(@value) = false) {
// 	@return: @value / @width;
// }

// // less-plugin-functions
// // Currently supported Less versions are 2.4.0...2.5.3 (2.5.x is recommended).
// .function {
// 	.px2rem(@value; @width: @flexible-unit) @when(isem(@value) = true) {
//         return: @value;
// 	}

// 	.px2rem(@value; @width: @flexible-unit) @when(isem(@value) = false) {
//         return: @value / @width * 1rem;
// 	}
// }

.font-dpr(@size) when(@flexible-dpr = 1) {
	font-size: @size;

	[data-dpr="2"] & {
		font-size: @size*2;
	}

	[data-dpr="3"] & {
		font-size: @size*3;
	}
}

.font-dpr(@size) when(@flexible-dpr = 2) {
	font-size: @size/2;

	[data-dpr="2"] & {
		font-size: @size;
	}

	[data-dpr="3"] & {
		font-size: @size*1.5;
	}
}

.font-dpr(@size) when(@flexible-dpr = 3) {
	font-size: @size/3;

	[data-dpr="2"] & {
		font-size: @size*2/3;
	}

	[data-dpr="3"] & {
		font-size: @size;
	}
}

.px-dpr(@property, @size, @rest...) when(@flexible-dpr = 1) {
	@{property}: @size @rest;
	
	[data-dpr="2"] & {
		@{property}: @size*2 @rest;
	}

	[data-dpr="3"] & {
		@{property}: @size*3 @rest;
	}
}

.px-dpr(@property, @size, @rest...) when(@flexible-dpr = 2) {
	@{property}: @size/2 @rest;
	
	[data-dpr="2"] & {
		@{property}: @size @rest;
	}

	[data-dpr="3"] & {
		@{property}: @size*1.5 @rest;
	}
}

.px-dpr(@property, @size, @rest...) when(@flexible-dpr = 3) {
	@{property}: @size/3 @rest;
	
	[data-dpr="2"] & {
		@{property}: @size*2/3 @rest;
	}

	[data-dpr="3"] & {
		@{property}: @size @rest;
	}
}
