// basic
$flexible-unit: 75;
$flexible-dpr: 2;

// 将 px 单位 转化为 rem单位值
// $value {px} 没有单位 会当做 px处理，rem不处理
// $width 基础值
@function px2rem($value, $width: $flexible-unit) {
	@if (unit($value) == rem) {
		@return $value;
	}

	@if (unitless($value)) {
		@warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
        @return px2rem($px + 0px);
	}

	@return ($value / $width) * 1rem;
}

// 对于文字，我们不推荐使用 rem 进行，应该使用px特定大小
// font-size 默认 dpr 2
@mixin font-dpr($font-size, $dpr: $flexible-dpr) {
    @if ($dpr == 1) {
		font-size: $font-size;

	    [data-dpr="2"] & {
	        font-size: $font-size * 2;
	    }

	    [data-dpr="3"] & {
	        font-size: $font-size * 3;
	    }
    } 
    @if ($dpr == 2) {
		font-size: $font-size / 2;

	    [data-dpr="2"] & {
	        font-size: $font-size;
	    }

	    [data-dpr="3"] & {
	        font-size: $font-size * 1.5;
	    }
	} 
	@if ($dpr == 3) {
		font-size: $font-size / 3;

	    [data-dpr="2"] & {
	        font-size: $font-size * 2 / 3;
	    }

	    [data-dpr="3"] & {
	        font-size: $font-size;
	    }
	}
}

// 除了字体，有时候一些属性，我们也不需要使用rem适配
@mixin px-dpr($property, $size, $others: "", $dpr: $flexible-dpr) {
	@if ($dpr == 1) {
		#{$property}: $size #{$others};

	    [data-dpr="2"] & {
	        #{$property}: $size * 2 #{$others};
	    }

	    [data-dpr="3"] & {
	        #{$property}: $size * 3 #{$others};
	    }
	}
	@if ($dpr == 2) {
		#{$property}: $size / 2 #{$others};

	    [data-dpr="2"] & {
	        #{$property}: $size #{$others};
	    }

	    [data-dpr="3"] & {
	        #{$property}: $size * 1.5 #{$others};
	    }
	} 
	@if ($dpr == 3) {
		#{$property}: $size / 3 #{$others};

	    [data-dpr="2"] & {
	        #{$property}: $size * 2 / 3 #{$others};
	    }

	    [data-dpr="3"] & {
	        #{$property}: $size #{$others};
	    }
	}
}
